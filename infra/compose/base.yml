version: '2.4'

services:

  server:
    build:
      context: ../../
    extends:
      file: ../../${CORERELDIR}infra/compose/base.yml
      service: server

  stream-control:
    build:
      context: ../../
    extends:
      file: ../../${CORERELDIR}infra/compose/base.yml
      service: server

  idilic:
    build:
      context: ../../
    extends:
      file: ../../${CORERELDIR}infra/compose/base.yml
      service: idilic

  database:
    extends:
      file: ../../vendor/seanmorris/ids/infra/compose/base.yml
      service: database

  redis:
    image: redis:5.0
    restart: always

  webdis:
    build:
      context: ../../
      dockerfile: infra/docker/webdis.Dockerfile
      target: ${TARGET}
      args:
        TARGET: ${TARGET}
        TAG:    ${TAG}
    image: ${REPO}/${PROJECT}.webdis:${TAG}
    restart: always
    environment:
      TAG: ${TAG}
      TARGET: ${TARGET}
    env_file:
      - ${MAIN_DLT}
      - ${MAIN_ENV}
      - ${TRGT_DLT}
      - ${TRGT_ENV}

  livestream:
    build:
      context: ../../
      dockerfile: infra/docker/livestream.Dockerfile
      target: ${TARGET}
      args:
        TARGET: ${TARGET}
        TAG:    ${TAG}
    image: ${REPO}/${PROJECT}.livestream:${TAG}
    restart: always
    volumes:
      - ../../:/app
    environment:
      TAG: ${TAG}
      TARGET: ${TARGET}
    env_file:
      - ${MAIN_DLT}
      - ${MAIN_ENV}
      - ${TRGT_DLT}
      - ${TRGT_ENV}

  balancer:
    build:
      context: ../../
      dockerfile: infra/docker/balancer.Dockerfile
      target: ${TARGET}
      args:
        TARGET: ${TARGET}
        TAG:    ${TAG}
    image: ${REPO}/${PROJECT}.balancer:${TAG}
    restart: always
    volumes:
      - ../../:/app
    environment:
      TAG: ${TAG}
      TARGET: ${TARGET}
    env_file:
      - ${MAIN_DLT}
      - ${MAIN_ENV}
      - ${TRGT_DLT}
      - ${TRGT_ENV}

  ytdl:
    build:
      context: ../../
      dockerfile: infra/docker/ytdl.Dockerfile
      target: ${TARGET}
      args:
        TARGET: ${TARGET}
        TAG:    ${TAG}
    image: ${REPO}/${PROJECT}.ytdl:${TAG}
    volumes:
      - ../../:/app
    environment:
      TAG: ${TAG}
      TARGET: ${TARGET}
    env_file:
      - ${MAIN_DLT}
      - ${MAIN_ENV}
      - ${TRGT_DLT}
      - ${TRGT_ENV}

  brunch:
    build:
      context: ../../
      dockerfile: infra/docker/brunch.Dockerfile
      target: ${TARGET}
      args:
        TARGET: ${TARGET}
        TAG:    ${TAG}
    image: ${REPO}/${PROJECT}.brunch:${TAG}
    restart: always
    volumes:
      - ../../:/app
    environment:
      TAG: ${TAG}
      TARGET: ${TARGET}
    env_file:
      - ${MAIN_DLT}
      - ${MAIN_ENV}
      - ${TRGT_DLT}
      - ${TRGT_ENV}

  certbot:
    image: certbot/certbot
    command: certbot certonly --staging -d 127.0.0.1.nip.io
    volumes:
      - ../../data/local/certbot:/etc/letsencrypt
      - ../../public:/var/www/certbot

volumes:
  schema:
    driver: local

